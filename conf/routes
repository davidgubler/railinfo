GET     /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)

GET     /                                               controllers.HomeController.index(request: Request, cc: String = null)
GET     /:cc                                            controllers.HomeController.index(request: Request, cc: String)

GET     /:cc/login                                      controllers.LoginController.login(request: Request, cc: String)
POST    /:cc/login                                      controllers.LoginController.loginPost(request: Request, cc: String)
GET     /:cc/logout                                     controllers.LoginController.logout(request: Request, cc: String)

GET     /:cc/timetable                                  controllers.TimetableController.index(request: Request, cc: String)
POST    /:cc/timetable                                  controllers.TimetableController.indexPost(request: Request, cc: String)
GET     /:cc/timetable/stop/:stopName                   controllers.TimetableController.stop(request: Request, cc: String, stopName: String)
GET     /:cc/timetable/realizedTrip/:tripId/:date       controllers.TimetableController.realizedTrip(request: Request, cc: String, tripId: String, date: String)
GET     /:cc/timetable/edge/:edgeId                     controllers.TimetableController.edge(request: Request, cc: String, edgeId: String)
GET     /:cc/timetable/nearby/:coordinates              controllers.TimetableController.nearby(request: Request, cc: String, coordinates: String)
GET     /:cc/timetable/edgePos/:edge/:pos               controllers.TimetableController.edgePos(request: Request, cc: String, edge: String, pos: Double)

GET     /:cc/admin/users                                controllers.AdminController.usersList(request: Request, cc: String)
GET     /:cc/admin/users/_create                        controllers.AdminController.usersCreate(request: Request, cc: String)
POST    /:cc/admin/users/_create                        controllers.AdminController.usersCreatePost(request: Request, cc: String)
GET     /:cc/admin/users/:uid/edit                      controllers.AdminController.usersEdit(request: Request, cc: String, uid: String)
POST    /:cc/admin/users/:uid/edit                      controllers.AdminController.usersEditPost(request: Request, cc: String, uid: String)
GET     /:cc/admin/users/:uid/delete                    controllers.AdminController.usersDelete(request: Request, cc: String, uid: String)
POST    /:cc/admin/users/:uid/delete                    controllers.AdminController.usersDeletePost(request: Request, cc: String, uid: String)
GET     /:cc/admin/databases                            controllers.DataImportController.listDatabases(request: Request, cc: String)
GET     /:cc/admin/import                               controllers.DataImportController.index(request: Request, cc: String)
POST    /:cc/admin/import/gtfs                          controllers.DataImportController.importGtfsPost(request: Request, cc: String)

GET     /:cc/topology/map                               controllers.TopologyController.map(request: Request, cc: String)
GET     /:cc/topology/recalculate                       controllers.TopologyController.recalculate(request: Request, cc: String)
POST    /:cc/topology/recalculateEdgesPost              controllers.TopologyController.recalculateEdgesPost(request: Request, cc: String)
POST    /:cc/topology/recalculatePathsPost              controllers.TopologyController.recalculatePathsPost(request: Request, cc: String)
GET     /:cc/topology/edges                             controllers.TopologyController.edgesList(request: Request, cc: String)
GET     /:cc/topology/edges/_create                     controllers.TopologyController.edgesCreate(request: Request, cc: String)
POST    /:cc/topology/edges/_create                     controllers.TopologyController.edgesCreatePost(request: Request, cc: String)
GET     /:cc/topology/edges/:edge                       controllers.TopologyController.edgesView(request: Request, cc: String, edge: String)
GET     /:cc/topology/edges/:edge/edit                  controllers.TopologyController.edgesEdit(request: Request, cc: String, edge: String)
POST    /:cc/topology/edges/:edge/edit                  controllers.TopologyController.edgesEditPost(request: Request, cc: String, edge: String)
GET     /:cc/topology/edges/:edge/delete                controllers.TopologyController.edgesDelete(request: Request, cc: String, edge: String)
POST    /:cc/topology/edges/:edge/delete                controllers.TopologyController.edgesDeletePost(request: Request, cc: String, edge: String)
GET     /:cc/topology/stops                             controllers.TopologyController.stopsSearch(request: Request, cc: String)
POST    /:cc/topology/stops                             controllers.TopologyController.stopsSearchPost(request: Request, cc: String)
GET     /:cc/topology/stops/_create                     controllers.TopologyController.stopsCreate(request: Request, cc: String)
POST    /:cc/topology/stops/_create                     controllers.TopologyController.stopsCreatePost(request: Request, cc: String)
GET     /:cc/topology/stops/:partial                    controllers.TopologyController.stopsList(request: Request, cc: String, partial: String)
GET     /:cc/topology/stops/:partial/:stopId/_edit      controllers.TopologyController.stopsEdit(request: Request, cc: String, partial: String, stopId: String)
POST    /:cc/topology/stops/:partial/:stopId/_edit      controllers.TopologyController.stopsEditPost(request: Request, cc: String, partial: String, stopId: String)
GET     /:cc/topology/stops/:partial/:stopId/_delete    controllers.TopologyController.stopsDelete(request: Request, cc: String, partial: String, stopId: String)
POST    /:cc/topology/stops/:partial/:stopId/_delete    controllers.TopologyController.stopsDeletePost(request: Request, cc: String, partial: String, stopId: String)

GET     /:cc/data/stops.json                            controllers.DataController.stops(request: Request, cc: String)

GET     /api/:cc/guessthetrain                          controllers.ApiController.guessTheTrain(request: Request, cc: String, lng: String, lat: String, date: String, time: String)
GET     /api/:cc/edgepos                                controllers.ApiController.edgePos(request: Request, cc: String)