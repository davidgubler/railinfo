GET     /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)

GET     /                                       controllers.HomeController.index(request: Request)

GET     /login                                  controllers.LoginController.login(request: Request)
POST    /login                                  controllers.LoginController.loginPost(request: Request)
GET     /logout                                 controllers.LoginController.logout(request: Request)

GET     /timetable                              controllers.TimetableController.index(request: Request)
GET     /timetable/departures/:stop             controllers.TimetableController.departures(request: Request, stop: String)
GET     /timetable/movements/:stop              controllers.TimetableController.movements(request: Request, stop: String)
GET     /timetable/realizedTrip/:tripId/:date   controllers.TimetableController.realizedTrip(request: Request, tripId: String, date: String)
GET     /timetable/edge/:edgeId                 controllers.TimetableController.edge(request: Request, edgeId: String)

GET     /admin                                  controllers.AdminController.admin(request: Request)
GET     /admin/users                            controllers.AdminController.usersList(request: Request)
GET     /admin/users/_create                    controllers.AdminController.usersCreate(request: Request)
POST    /admin/users/_create                    controllers.AdminController.usersCreatePost(request: Request)
GET     /admin/users/:uid/edit                  controllers.AdminController.usersEdit(request: Request, uid: String)
POST    /admin/users/:uid/edit                  controllers.AdminController.usersEditPost(request: Request, uid: String)
GET     /admin/users/:uid/delete                controllers.AdminController.usersDelete(request: Request, uid: String)
POST    /admin/users/:uid/delete                controllers.AdminController.usersDeletePost(request: Request, uid: String)
POST    /admin/recalculateEdges                 controllers.AdminController.recalculateEdgesPost(request: Request)
GET     /admin/import                           controllers.DataImportController.index(request: Request)
POST    /admin/import/gtfs                      controllers.DataImportController.importGtfsPost(request: Request)

GET     /topology/map                           controllers.TopologyController.map(request: Request)
GET     /topology/recalculate                   controllers.TopologyController.recalculate(request: Request)
POST    /topology/recalculateEdgesPost          controllers.TopologyController.recalculateEdgesPost(request: Request)
POST    /topology/recalculatePathsPost          controllers.TopologyController.recalculatePathsPost(request: Request)
GET     /topology/edges                         controllers.TopologyController.edgesList(request: Request)
GET     /topology/edges/_create                 controllers.TopologyController.edgeCreate(request: Request)
POST    /topology/edges/_create                 controllers.TopologyController.edgeCreatePost(request: Request)
GET     /topology/edges/:edge/edit              controllers.TopologyController.edgeEdit(request: Request, edge: String)
POST    /topology/edges/:edge/edit              controllers.TopologyController.edgeEditPost(request: Request, edge: String)
GET     /topology/edges/:edge/delete            controllers.TopologyController.edgeDelete(request: Request, edge: String)
POST    /topology/edges/:edge/delete            controllers.TopologyController.edgeDeletePost(request: Request, edge: String)


